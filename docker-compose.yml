version: "3.8"

services:
  # DB
  mysqldb:
    image: mysql:8.0.29
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQLDB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQLDB_DATABASE}
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    volumes:
      - db:/var/lib/mysql

  # BE
  cdss:
    depends_on:
      - mysqldb
    build: ./product
    restart: "no"
    env_file: ./.env
    ports:
      - ${SPRING_LOCAL_PORT}:${SPRING_DOCKER_PORT}
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:${MYSQLDB_DOCKER_PORT}/${MYSQLDB_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "${MYSQLDB_USER}",
        "spring.datasource.password" : "${MYSQLDB_ROOT_PASSWORD}",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL5InnoDBDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"}'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true
    # networks: # Networks to join (Services on the same network can communicate with each other using their name)
    #   - backend
    #   - frontend

  # FE
  fe:
    depends_on:
      - cdss
    build: ./fe/fe
    env_file: ./.env
    ports:
      - ${REACT_LOCAL_PORT}:${REACT_DOCKER_PORT}
    restart: always
    # networks:
    #   - frontend

volumes:
  db:
  
# networks:
#   backend:
#   frontend: